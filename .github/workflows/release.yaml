name: Build and release
on:
  workflow_call: 
    inputs: 
      project-name:
        description: 'Name of the project to be built'
        required: true
        type: 'string'
      nuget-output:
        description: 'Folder for nuget package output'
        required: true
        type: string

jobs:
  versioning:
    runs-on: ubuntu-latest
    name: Bump Version
    defaults: 
      run:
        working-directory: ${{inputs.project-name}}
    steps:
      - name: Generate Github App token
        id: get-app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: 1385001
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Checkout code & full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Install Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: "Install semantic-release"
        run: |
          npm install --no-save \
          semantic-release \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          @semantic-release/changelog \
          @semantic-release/exec \
          @semantic-release/git \
          @semantic-release/github
      - name: Set remote with app token
        run: |
          git config --global user.name "release-bot[app]"
          git config --global user.email "release-bot[app]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${{ steps.get-app-token.outputs.token }}@github.com/${{ github.repository }}.git"
      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ steps.get-app-token.outputs.token }}
        run: |
          npx semantic-release --no-ci
  build:
    runs-on: ubuntu-latest
    needs: versioning
    name: Build and Release new package
    if: needs.versioning.result == 'success'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - name: Restore and Build AST
        run: |
          dotnet restore ${{ inputs.project-name }}/${{ inputs.project-name }}.csproj
          dotnet build ${{ inputs.project-name }}/${{ inputs.project-name }}.csproj --configuration Release
      - name: Pack AST
        run: dotnet pack ${{ inputs.project-name }}/${{ inputs.project-name }}.csproj --configuration Release --output ${{ inputs.nuget-output }}
      - name: Publish Vectra.AST to github packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for pkg in ./${{inputs.nuget-output}}/*.nupkg; do
            dotnet nuget push "$pkg" \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --api-key "$GITHUB_TOKEN" \
              --skip-duplicate
          done